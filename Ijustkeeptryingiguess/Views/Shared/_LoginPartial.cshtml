﻿@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<!-- Navigasjonsmeny med brukerautentisering -->
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Vis brukernavn og logout-knapp hvis brukeren er pålogget -->
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Administrer">
                Hei @UserManager.GetUserName(User)!
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logg ut</button>
            </form>
        </li>
    }
    else
    {
        <!-- Vis registrerings- og påloggingslenker hvis brukeren ikke er pålogget -->
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrer</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Logg inn</a>
        </li>
    }
</ul>

